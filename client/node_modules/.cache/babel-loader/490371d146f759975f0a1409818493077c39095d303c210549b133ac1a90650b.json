{"ast":null,"code":"import React from 'react';\nconst AdminProtectedRoute = ({\n  children\n}) => {\n  const isAdminLoggedIn = localStorage.getItem('isAdminLoggedIn') === 'true';\n  const adminUser = JSON.parse(localStorage.getItem('adminUser') || '{}');\n\n  // Check if admin is logged in\n  if (!isAdminLoggedIn || !adminUser.isAdmin) {\n    // Clear any invalid data\n    localStorage.removeItem('isAdminLoggedIn');\n    localStorage.removeItem('adminUser');\n    return null; // This will show the login form since App.js handles the redirect\n  }\n  return children;\n};\n_c = AdminProtectedRoute;\nexport default AdminProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminProtectedRoute\");","map":{"version":3,"names":["React","AdminProtectedRoute","children","isAdminLoggedIn","localStorage","getItem","adminUser","JSON","parse","isAdmin","removeItem","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/capstone-final/client/src/admin/components/AdminProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst AdminProtectedRoute = ({ children }) => {\r\n  const isAdminLoggedIn = localStorage.getItem('isAdminLoggedIn') === 'true';\r\n  const adminUser = JSON.parse(localStorage.getItem('adminUser') || '{}');\r\n\r\n  // Check if admin is logged in\r\n  if (!isAdminLoggedIn || !adminUser.isAdmin) {\r\n    // Clear any invalid data\r\n    localStorage.removeItem('isAdminLoggedIn');\r\n    localStorage.removeItem('adminUser');\r\n    return null; // This will show the login form since App.js handles the redirect\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminProtectedRoute;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5C,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;EAC1E,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC;;EAEvE;EACA,IAAI,CAACF,eAAe,IAAI,CAACG,SAAS,CAACG,OAAO,EAAE;IAC1C;IACAL,YAAY,CAACM,UAAU,CAAC,iBAAiB,CAAC;IAC1CN,YAAY,CAACM,UAAU,CAAC,WAAW,CAAC;IACpC,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,OAAOR,QAAQ;AACjB,CAAC;AAACS,EAAA,GAbIV,mBAAmB;AAezB,eAAeA,mBAAmB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}