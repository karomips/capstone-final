{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\capstone-final\\\\user\\\\src\\\\components\\\\Messages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './Messages.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const scrollRef = useRef();\n  const currentUser = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/conversations/${currentUser.email}`);\n        setConversations(res.data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching conversations:', err);\n        setLoading(false);\n      }\n    };\n    fetchConversations();\n  }, [currentUser.email]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        if (currentChat) {\n          const res = await axios.get(`http://localhost:5000/api/messages/${currentChat._id}`);\n          setMessages(res.data);\n        }\n      } catch (err) {\n        console.error('Error fetching messages:', err);\n      }\n    };\n    fetchMessages();\n  }, [currentChat]);\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const message = {\n      conversationId: currentChat._id,\n      sender: currentUser.email,\n      text: newMessage\n    };\n    try {\n      const res = await axios.post('http://localhost:5000/api/messages', message);\n      setMessages([...messages, res.data]);\n      setNewMessage('');\n    } catch (err) {\n      console.error('Error sending message:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-menu-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-loading\",\n        children: \"Loading conversations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `conversation-item ${(currentChat === null || currentChat === void 0 ? void 0 : currentChat._id) === conv._id ? 'active' : ''}`,\n          onClick: () => setCurrentChat(conv),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-name\",\n            children: conv.members.find(member => member !== currentUser.email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-preview\",\n            children: conv.lastMessage || 'No messages yet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, conv._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-chat\",\n      children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentChat.members.find(member => member !== currentUser.email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            className: `message ${message.sender === currentUser.email ? 'own' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: new Date(message.createdAt).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, message._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input-container\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            className: \"chat-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a conversation to start messaging\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"gEif694XpwOnDAQvVLIfRsLKs2A=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","_s","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","loading","setLoading","scrollRef","currentUser","JSON","parse","localStorage","getItem","fetchConversations","res","get","email","data","err","console","error","fetchMessages","_id","_scrollRef$current","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","message","conversationId","sender","text","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","conv","onClick","members","find","member","lastMessage","ref","Date","createdAt","toLocaleTimeString","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/capstone-final/user/src/components/Messages/Messages.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './Messages.css';\r\n\r\nfunction Messages() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const scrollRef = useRef();\r\n  const currentUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:5000/api/conversations/${currentUser.email}`);\r\n        setConversations(res.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching conversations:', err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchConversations();\r\n  }, [currentUser.email]);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        if (currentChat) {\r\n          const res = await axios.get(`http://localhost:5000/api/messages/${currentChat._id}`);\r\n          setMessages(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching messages:', err);\r\n      }\r\n    };\r\n    fetchMessages();\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    const message = {\r\n      conversationId: currentChat._id,\r\n      sender: currentUser.email,\r\n      text: newMessage,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/messages', message);\r\n      setMessages([...messages, res.data]);\r\n      setNewMessage('');\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages\">\r\n      <div className=\"messages-menu\">\r\n        <div className=\"messages-menu-header\">\r\n          <h2>Messages</h2>\r\n        </div>\r\n        {loading ? (\r\n          <div className=\"messages-loading\">Loading conversations...</div>\r\n        ) : (\r\n          <div className=\"conversations-list\">\r\n            {conversations.map((conv) => (\r\n              <div\r\n                key={conv._id}\r\n                className={`conversation-item ${currentChat?._id === conv._id ? 'active' : ''}`}\r\n                onClick={() => setCurrentChat(conv)}\r\n              >\r\n                <div className=\"conversation-name\">\r\n                  {conv.members.find(member => member !== currentUser.email)}\r\n                </div>\r\n                <div className=\"conversation-preview\">\r\n                  {conv.lastMessage || 'No messages yet'}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"messages-chat\">\r\n        {currentChat ? (\r\n          <>\r\n            <div className=\"chat-header\">\r\n              <h3>{currentChat.members.find(member => member !== currentUser.email)}</h3>\r\n            </div>\r\n            <div className=\"chat-messages\">\r\n              {messages.map((message) => (\r\n                <div\r\n                  ref={scrollRef}\r\n                  key={message._id}\r\n                  className={`message ${message.sender === currentUser.email ? 'own' : ''}`}\r\n                >\r\n                  <div className=\"message-content\">\r\n                    <p>{message.text}</p>\r\n                    <span className=\"message-time\">\r\n                      {new Date(message.createdAt).toLocaleTimeString()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <form className=\"chat-input-container\" onSubmit={handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Type a message...\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                className=\"chat-input\"\r\n              />\r\n              <button type=\"submit\" className=\"send-button\">\r\n                Send\r\n              </button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"no-chat-selected\">\r\n            <p>Select a conversation to start messaging</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMoB,SAAS,GAAGlB,MAAM,CAAC,CAAC;EAC1B,MAAMmB,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAE5DxB,SAAS,CAAC,MAAM;IACd,MAAMyB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,2CAA2CP,WAAW,CAACQ,KAAK,EAAE,CAAC;QAC3FlB,gBAAgB,CAACgB,GAAG,CAACG,IAAI,CAAC;QAC1BX,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;QACnDZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDO,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACL,WAAW,CAACQ,KAAK,CAAC,CAAC;EAEvB5B,SAAS,CAAC,MAAM;IACd,MAAMiC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,IAAItB,WAAW,EAAE;UACf,MAAMe,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,sCAAsChB,WAAW,CAACuB,GAAG,EAAE,CAAC;UACpFpB,WAAW,CAACY,GAAG,CAACG,IAAI,CAAC;QACvB;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAChD;IACF,CAAC;IACDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACtB,WAAW,CAAC,CAAC;EAEjBX,SAAS,CAAC,MAAM;IAAA,IAAAmC,kBAAA;IACd,CAAAA,kBAAA,GAAAhB,SAAS,CAACiB,OAAO,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACzB,QAAQ,CAAC,CAAC;EAEd,MAAM0B,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC1B,UAAU,CAAC2B,IAAI,CAAC,CAAC,EAAE;IAExB,MAAMC,OAAO,GAAG;MACdC,cAAc,EAAEjC,WAAW,CAACuB,GAAG;MAC/BW,MAAM,EAAEzB,WAAW,CAACQ,KAAK;MACzBkB,IAAI,EAAE/B;IACR,CAAC;IAED,IAAI;MACF,MAAMW,GAAG,GAAG,MAAMxB,KAAK,CAAC6C,IAAI,CAAC,oCAAoC,EAAEJ,OAAO,CAAC;MAC3E7B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEa,GAAG,CAACG,IAAI,CAAC,CAAC;MACpCb,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK4C,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB7C,OAAA;MAAK4C,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B7C,OAAA;QAAK4C,SAAS,EAAC,sBAAsB;QAAAC,QAAA,eACnC7C,OAAA;UAAA6C,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,EACLpC,OAAO,gBACNb,OAAA;QAAK4C,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAEhEjD,OAAA;QAAK4C,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChCxC,aAAa,CAAC6C,GAAG,CAAEC,IAAI,iBACtBnD,OAAA;UAEE4C,SAAS,EAAE,qBAAqB,CAAArC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEuB,GAAG,MAAKqB,IAAI,CAACrB,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;UAChFsB,OAAO,EAAEA,CAAA,KAAM5C,cAAc,CAAC2C,IAAI,CAAE;UAAAN,QAAA,gBAEpC7C,OAAA;YAAK4C,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC/BM,IAAI,CAACE,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,KAAKvC,WAAW,CAACQ,KAAK;UAAC;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC,eACNjD,OAAA;YAAK4C,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAClCM,IAAI,CAACK,WAAW,IAAI;UAAiB;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA,GATDE,IAAI,CAACrB,GAAG;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENjD,OAAA;MAAK4C,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BtC,WAAW,gBACVP,OAAA,CAAAE,SAAA;QAAA2C,QAAA,gBACE7C,OAAA;UAAK4C,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1B7C,OAAA;YAAA6C,QAAA,EAAKtC,WAAW,CAAC8C,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,KAAKvC,WAAW,CAACQ,KAAK;UAAC;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACNjD,OAAA;UAAK4C,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BpC,QAAQ,CAACyC,GAAG,CAAEX,OAAO,iBACpBvC,OAAA;YACEyD,GAAG,EAAE1C,SAAU;YAEf6B,SAAS,EAAE,WAAWL,OAAO,CAACE,MAAM,KAAKzB,WAAW,CAACQ,KAAK,GAAG,KAAK,GAAG,EAAE,EAAG;YAAAqB,QAAA,eAE1E7C,OAAA;cAAK4C,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B7C,OAAA;gBAAA6C,QAAA,EAAIN,OAAO,CAACG;cAAI;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBjD,OAAA;gBAAM4C,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAC3B,IAAIa,IAAI,CAACnB,OAAO,CAACoB,SAAS,CAAC,CAACC,kBAAkB,CAAC;cAAC;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC,GARDV,OAAO,CAACT,GAAG;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASb,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNjD,OAAA;UAAM4C,SAAS,EAAC,sBAAsB;UAACiB,QAAQ,EAAE1B,YAAa;UAAAU,QAAA,gBAC5D7C,OAAA;YACE8D,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,mBAAmB;YAC/BC,KAAK,EAAErD,UAAW;YAClBsD,QAAQ,EAAG7B,CAAC,IAAKxB,aAAa,CAACwB,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;YAC/CpB,SAAS,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACFjD,OAAA;YAAQ8D,IAAI,EAAC,QAAQ;YAAClB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAE9C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA,eACP,CAAC,gBAEHjD,OAAA;QAAK4C,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/B7C,OAAA;UAAA6C,QAAA,EAAG;QAAwC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7C,EAAA,CAnIQD,QAAQ;AAAAgE,EAAA,GAARhE,QAAQ;AAqIjB,eAAeA,QAAQ;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}