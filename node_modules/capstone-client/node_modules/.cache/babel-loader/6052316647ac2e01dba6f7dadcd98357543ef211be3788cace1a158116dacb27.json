{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\capstone-final\\\\client\\\\src\\\\user\\\\components\\\\Messages\\\\Messages.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './Messages.css';\nimport '../../styles/professional-theme.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [showNewChat, setShowNewChat] = useState(false);\n  const [selectedUser, setSelectedUser] = useState('');\n  const scrollRef = useRef();\n  const currentUser = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/conversations/${currentUser.email}`);\n        setConversations(res.data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching conversations:', err);\n        setLoading(false);\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/users/list');\n        if (res.data.success) {\n          // Filter out current user\n          const otherUsers = res.data.users.filter(user => user.email !== currentUser.email);\n          setUsers(otherUsers);\n        }\n      } catch (err) {\n        console.error('Error fetching users:', err);\n      }\n    };\n    fetchConversations();\n    fetchUsers();\n  }, [currentUser.email]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        if (currentChat) {\n          const res = await axios.get(`http://localhost:5000/api/messages/${currentChat._id}`);\n          setMessages(res.data);\n        }\n      } catch (err) {\n        console.error('Error fetching messages:', err);\n      }\n    };\n    fetchMessages();\n  }, [currentChat]);\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const message = {\n      conversationId: currentChat._id,\n      sender: currentUser.email,\n      text: newMessage\n    };\n    try {\n      const res = await axios.post('http://localhost:5000/api/messages', message);\n      setMessages([...messages, res.data]);\n      setNewMessage('');\n\n      // Refresh conversations to update last message\n      const conversationsRes = await axios.get(`http://localhost:5000/api/conversations/${currentUser.email}`);\n      setConversations(conversationsRes.data);\n    } catch (err) {\n      console.error('Error sending message:', err);\n    }\n  };\n  const startNewConversation = async () => {\n    if (!selectedUser) return;\n    try {\n      const res = await axios.post('http://localhost:5000/api/conversations', {\n        members: [currentUser.email, selectedUser]\n      });\n      setCurrentChat(res.data);\n      setShowNewChat(false);\n      setSelectedUser('');\n\n      // Refresh conversations list\n      const conversationsRes = await axios.get(`http://localhost:5000/api/conversations/${currentUser.email}`);\n      setConversations(conversationsRes.data);\n    } catch (err) {\n      console.error('Error creating conversation:', err);\n    }\n  };\n  const getOtherMember = conversation => {\n    return conversation.members.find(member => member !== currentUser.email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container professional-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-header professional-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"messages-header-title professional-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"messages-header-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), \"Messages\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"messages-header-subtitle professional-subtitle\",\n          children: \"Connect with other users in the community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages professional-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-menu professional-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-menu-header professional-sidebar-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"professional-heading\",\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"new-chat-btn professional-btn professional-btn-primary\",\n              onClick: () => setShowNewChat(!showNewChat),\n              children: \"+ New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), showNewChat && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-chat-form professional-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedUser,\n              onChange: e => setSelectedUser(e.target.value),\n              className: \"user-select professional-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a user...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user.email,\n                children: [user.name, \" (\", user.email, \")\"]\n              }, user.email, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startNewConversation,\n              disabled: !selectedUser,\n              className: \"start-chat-btn professional-btn professional-btn-secondary\",\n              children: \"Start Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-loading professional-loading\",\n            children: \"Loading conversations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversations-list\",\n            children: conversations.length > 0 ? conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `conversation-item professional-list-item ${(currentChat === null || currentChat === void 0 ? void 0 : currentChat._id) === conv._id ? 'active' : ''}`,\n              onClick: () => setCurrentChat(conv),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-name professional-text\",\n                children: getOtherMember(conv)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-preview professional-text-secondary\",\n                children: conv.lastMessage || 'No messages yet'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this)]\n            }, conv._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-conversations professional-empty-state\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"professional-text\",\n                children: \"No conversations yet. Start a new chat above!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-chat professional-main-content\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header professional-chat-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"professional-heading\",\n                children: getOtherMember(currentChat)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-messages professional-chat-messages\",\n              children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                className: `message professional-message ${message.sender === currentUser.email ? 'own' : ''}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content professional-message-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"professional-text\",\n                    children: message.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"message-time professional-text-secondary\",\n                    children: new Date(message.createdAt).toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this)\n              }, message._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"chat-input-container professional-chat-input\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Type a message...\",\n                value: newMessage,\n                onChange: e => setNewMessage(e.target.value),\n                className: \"chat-input professional-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"send-button professional-btn professional-btn-primary\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-chat-selected professional-empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-chat-icon\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"professional-heading\",\n              children: \"Welcome to Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"professional-text\",\n              children: \"Select a conversation to start messaging or create a new chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"DceFrv5UWyb45Zrwe2qXlRuW6GQ=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","_s","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","loading","setLoading","users","setUsers","showNewChat","setShowNewChat","selectedUser","setSelectedUser","scrollRef","currentUser","JSON","parse","localStorage","getItem","fetchConversations","res","get","email","data","err","console","error","fetchUsers","success","otherUsers","filter","user","fetchMessages","_id","_scrollRef$current","current","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","message","conversationId","sender","text","post","conversationsRes","startNewConversation","members","getOtherMember","conversation","find","member","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","target","map","name","disabled","length","conv","lastMessage","ref","Date","createdAt","toLocaleTimeString","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/capstone-final/client/src/user/components/Messages/Messages.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './Messages.css';\r\nimport '../../styles/professional-theme.css';\r\n\r\nfunction Messages() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [showNewChat, setShowNewChat] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n  const scrollRef = useRef();\r\n  const currentUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:5000/api/conversations/${currentUser.email}`);\r\n        setConversations(res.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching conversations:', err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    const fetchUsers = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/users/list');\r\n        if (res.data.success) {\r\n          // Filter out current user\r\n          const otherUsers = res.data.users.filter(user => user.email !== currentUser.email);\r\n          setUsers(otherUsers);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching users:', err);\r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n    fetchUsers();\r\n  }, [currentUser.email]);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        if (currentChat) {\r\n          const res = await axios.get(`http://localhost:5000/api/messages/${currentChat._id}`);\r\n          setMessages(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching messages:', err);\r\n      }\r\n    };\r\n    fetchMessages();\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    const message = {\r\n      conversationId: currentChat._id,\r\n      sender: currentUser.email,\r\n      text: newMessage,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/messages', message);\r\n      setMessages([...messages, res.data]);\r\n      setNewMessage('');\r\n      \r\n      // Refresh conversations to update last message\r\n      const conversationsRes = await axios.get(`http://localhost:5000/api/conversations/${currentUser.email}`);\r\n      setConversations(conversationsRes.data);\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n    }\r\n  };\r\n\r\n  const startNewConversation = async () => {\r\n    if (!selectedUser) return;\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/conversations', {\r\n        members: [currentUser.email, selectedUser]\r\n      });\r\n      \r\n      setCurrentChat(res.data);\r\n      setShowNewChat(false);\r\n      setSelectedUser('');\r\n      \r\n      // Refresh conversations list\r\n      const conversationsRes = await axios.get(`http://localhost:5000/api/conversations/${currentUser.email}`);\r\n      setConversations(conversationsRes.data);\r\n    } catch (err) {\r\n      console.error('Error creating conversation:', err);\r\n    }\r\n  };\r\n\r\n  const getOtherMember = (conversation) => {\r\n    return conversation.members.find(member => member !== currentUser.email);\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages-container professional-container\">\r\n      <div className=\"messages-content\">\r\n        {/* Messages Header */}\r\n        <div className=\"messages-header professional-header\">\r\n          <h1 className=\"messages-header-title professional-title\">\r\n            <span className=\"messages-header-icon\"></span>\r\n            Messages\r\n          </h1>\r\n          <p className=\"messages-header-subtitle professional-subtitle\">\r\n            Connect with other users in the community\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"messages professional-card\">\r\n          <div className=\"messages-menu professional-sidebar\">\r\n            <div className=\"messages-menu-header professional-sidebar-header\">\r\n              <h2 className=\"professional-heading\">Conversations</h2>\r\n              <button \r\n                className=\"new-chat-btn professional-btn professional-btn-primary\"\r\n                onClick={() => setShowNewChat(!showNewChat)}\r\n              >\r\n                + New Chat\r\n              </button>\r\n            </div>\r\n            \r\n            {showNewChat && (\r\n              <div className=\"new-chat-form professional-form\">\r\n                <select \r\n                  value={selectedUser} \r\n                  onChange={(e) => setSelectedUser(e.target.value)}\r\n                  className=\"user-select professional-select\"\r\n                >\r\n                  <option value=\"\">Select a user...</option>\r\n                  {users.map((user) => (\r\n                    <option key={user.email} value={user.email}>\r\n                      {user.name} ({user.email})\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <button \r\n                  onClick={startNewConversation}\r\n                  disabled={!selectedUser}\r\n                  className=\"start-chat-btn professional-btn professional-btn-secondary\"\r\n                >\r\n                  Start Chat\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            {loading ? (\r\n              <div className=\"messages-loading professional-loading\">Loading conversations...</div>\r\n            ) : (\r\n              <div className=\"conversations-list\">\r\n                {conversations.length > 0 ? (\r\n                  conversations.map((conv) => (\r\n                    <div\r\n                      key={conv._id}\r\n                      className={`conversation-item professional-list-item ${currentChat?._id === conv._id ? 'active' : ''}`}\r\n                      onClick={() => setCurrentChat(conv)}\r\n                    >\r\n                      <div className=\"conversation-name professional-text\">\r\n                        {getOtherMember(conv)}\r\n                      </div>\r\n                      <div className=\"conversation-preview professional-text-secondary\">\r\n                        {conv.lastMessage || 'No messages yet'}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"no-conversations professional-empty-state\">\r\n                    <p className=\"professional-text\">No conversations yet. Start a new chat above!</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"messages-chat professional-main-content\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"chat-header professional-chat-header\">\r\n                  <h3 className=\"professional-heading\">{getOtherMember(currentChat)}</h3>\r\n                </div>\r\n                <div className=\"chat-messages professional-chat-messages\">\r\n                  {messages.map((message) => (\r\n                    <div\r\n                      ref={scrollRef}\r\n                      key={message._id}\r\n                      className={`message professional-message ${message.sender === currentUser.email ? 'own' : ''}`}\r\n                    >\r\n                      <div className=\"message-content professional-message-content\">\r\n                        <p className=\"professional-text\">{message.text}</p>\r\n                        <span className=\"message-time professional-text-secondary\">\r\n                          {new Date(message.createdAt).toLocaleTimeString()}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <form className=\"chat-input-container professional-chat-input\" onSubmit={handleSubmit}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    className=\"chat-input professional-input\"\r\n                  />\r\n                  <button type=\"submit\" className=\"send-button professional-btn professional-btn-primary\">\r\n                    Send\r\n                  </button>\r\n                </form>\r\n              </>\r\n            ) : (\r\n              <div className=\"no-chat-selected professional-empty-state\">\r\n                <div className=\"no-chat-icon\">💬</div>\r\n                <h3 className=\"professional-heading\">Welcome to Messages</h3>\r\n                <p className=\"professional-text\">Select a conversation to start messaging or create a new chat</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAO,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM0B,SAAS,GAAGxB,MAAM,CAAC,CAAC;EAC1B,MAAMyB,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAE5D9B,SAAS,CAAC,MAAM;IACd,MAAM+B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,2CAA2CP,WAAW,CAACQ,KAAK,EAAE,CAAC;QAC3FxB,gBAAgB,CAACsB,GAAG,CAACG,IAAI,CAAC;QAC1BjB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOkB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;QACnDlB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,MAAMqB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMP,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,sCAAsC,CAAC;QACnE,IAAID,GAAG,CAACG,IAAI,CAACK,OAAO,EAAE;UACpB;UACA,MAAMC,UAAU,GAAGT,GAAG,CAACG,IAAI,CAAChB,KAAK,CAACuB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACT,KAAK,KAAKR,WAAW,CAACQ,KAAK,CAAC;UAClFd,QAAQ,CAACqB,UAAU,CAAC;QACtB;MACF,CAAC,CAAC,OAAOL,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC7C;IACF,CAAC;IAEDL,kBAAkB,CAAC,CAAC;IACpBQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACb,WAAW,CAACQ,KAAK,CAAC,CAAC;EAEvBlC,SAAS,CAAC,MAAM;IACd,MAAM4C,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,IAAIjC,WAAW,EAAE;UACf,MAAMqB,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,sCAAsCtB,WAAW,CAACkC,GAAG,EAAE,CAAC;UACpF/B,WAAW,CAACkB,GAAG,CAACG,IAAI,CAAC;QACvB;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAChD;IACF,CAAC;IACDQ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACjC,WAAW,CAAC,CAAC;EAEjBX,SAAS,CAAC,MAAM;IAAA,IAAA8C,kBAAA;IACd,CAAAA,kBAAA,GAAArB,SAAS,CAACsB,OAAO,cAAAD,kBAAA,uBAAjBA,kBAAA,CAAmBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACpC,QAAQ,CAAC,CAAC;EAEd,MAAMqC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACrC,UAAU,CAACsC,IAAI,CAAC,CAAC,EAAE;IAExB,MAAMC,OAAO,GAAG;MACdC,cAAc,EAAE5C,WAAW,CAACkC,GAAG;MAC/BW,MAAM,EAAE9B,WAAW,CAACQ,KAAK;MACzBuB,IAAI,EAAE1C;IACR,CAAC;IAED,IAAI;MACF,MAAMiB,GAAG,GAAG,MAAM9B,KAAK,CAACwD,IAAI,CAAC,oCAAoC,EAAEJ,OAAO,CAAC;MAC3ExC,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEmB,GAAG,CAACG,IAAI,CAAC,CAAC;MACpCnB,aAAa,CAAC,EAAE,CAAC;;MAEjB;MACA,MAAM2C,gBAAgB,GAAG,MAAMzD,KAAK,CAAC+B,GAAG,CAAC,2CAA2CP,WAAW,CAACQ,KAAK,EAAE,CAAC;MACxGxB,gBAAgB,CAACiD,gBAAgB,CAACxB,IAAI,CAAC;IACzC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,MAAMwB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAACrC,YAAY,EAAE;IAEnB,IAAI;MACF,MAAMS,GAAG,GAAG,MAAM9B,KAAK,CAACwD,IAAI,CAAC,yCAAyC,EAAE;QACtEG,OAAO,EAAE,CAACnC,WAAW,CAACQ,KAAK,EAAEX,YAAY;MAC3C,CAAC,CAAC;MAEFX,cAAc,CAACoB,GAAG,CAACG,IAAI,CAAC;MACxBb,cAAc,CAAC,KAAK,CAAC;MACrBE,eAAe,CAAC,EAAE,CAAC;;MAEnB;MACA,MAAMmC,gBAAgB,GAAG,MAAMzD,KAAK,CAAC+B,GAAG,CAAC,2CAA2CP,WAAW,CAACQ,KAAK,EAAE,CAAC;MACxGxB,gBAAgB,CAACiD,gBAAgB,CAACxB,IAAI,CAAC;IACzC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,GAAG,CAAC;IACpD;EACF,CAAC;EAED,MAAM0B,cAAc,GAAIC,YAAY,IAAK;IACvC,OAAOA,YAAY,CAACF,OAAO,CAACG,IAAI,CAACC,MAAM,IAAIA,MAAM,KAAKvC,WAAW,CAACQ,KAAK,CAAC;EAC1E,CAAC;EAED,oBACE9B,OAAA;IAAK8D,SAAS,EAAC,2CAA2C;IAAAC,QAAA,eACxD/D,OAAA;MAAK8D,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAE/B/D,OAAA;QAAK8D,SAAS,EAAC,qCAAqC;QAAAC,QAAA,gBAClD/D,OAAA;UAAI8D,SAAS,EAAC,0CAA0C;UAAAC,QAAA,gBACtD/D,OAAA;YAAM8D,SAAS,EAAC;UAAsB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,YAEhD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLnE,OAAA;UAAG8D,SAAS,EAAC,gDAAgD;UAAAC,QAAA,EAAC;QAE9D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENnE,OAAA;QAAK8D,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBACzC/D,OAAA;UAAK8D,SAAS,EAAC,oCAAoC;UAAAC,QAAA,gBACjD/D,OAAA;YAAK8D,SAAS,EAAC,kDAAkD;YAAAC,QAAA,gBAC/D/D,OAAA;cAAI8D,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvDnE,OAAA;cACE8D,SAAS,EAAC,wDAAwD;cAClEM,OAAO,EAAEA,CAAA,KAAMlD,cAAc,CAAC,CAACD,WAAW,CAAE;cAAA8C,QAAA,EAC7C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAELlD,WAAW,iBACVjB,OAAA;YAAK8D,SAAS,EAAC,iCAAiC;YAAAC,QAAA,gBAC9C/D,OAAA;cACEqE,KAAK,EAAElD,YAAa;cACpBmD,QAAQ,EAAGvB,CAAC,IAAK3B,eAAe,CAAC2B,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;cACjDP,SAAS,EAAC,iCAAiC;cAAAC,QAAA,gBAE3C/D,OAAA;gBAAQqE,KAAK,EAAC,EAAE;gBAAAN,QAAA,EAAC;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACzCpD,KAAK,CAACyD,GAAG,CAAEjC,IAAI,iBACdvC,OAAA;gBAAyBqE,KAAK,EAAE9B,IAAI,CAACT,KAAM;gBAAAiC,QAAA,GACxCxB,IAAI,CAACkC,IAAI,EAAC,IAAE,EAAClC,IAAI,CAACT,KAAK,EAAC,GAC3B;cAAA,GAFaS,IAAI,CAACT,KAAK;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEf,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC,eACTnE,OAAA;cACEoE,OAAO,EAAEZ,oBAAqB;cAC9BkB,QAAQ,EAAE,CAACvD,YAAa;cACxB2C,SAAS,EAAC,4DAA4D;cAAAC,QAAA,EACvE;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN,EAEAtD,OAAO,gBACNb,OAAA;YAAK8D,SAAS,EAAC,uCAAuC;YAAAC,QAAA,EAAC;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBAErFnE,OAAA;YAAK8D,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAChC1D,aAAa,CAACsE,MAAM,GAAG,CAAC,GACvBtE,aAAa,CAACmE,GAAG,CAAEI,IAAI,iBACrB5E,OAAA;cAEE8D,SAAS,EAAE,4CAA4C,CAAAvD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkC,GAAG,MAAKmC,IAAI,CAACnC,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;cACvG2B,OAAO,EAAEA,CAAA,KAAM5D,cAAc,CAACoE,IAAI,CAAE;cAAAb,QAAA,gBAEpC/D,OAAA;gBAAK8D,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,EACjDL,cAAc,CAACkB,IAAI;cAAC;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC,eACNnE,OAAA;gBAAK8D,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,EAC9Da,IAAI,CAACC,WAAW,IAAI;cAAiB;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC;YAAA,GATDS,IAAI,CAACnC,GAAG;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUV,CACN,CAAC,gBAEFnE,OAAA;cAAK8D,SAAS,EAAC,2CAA2C;cAAAC,QAAA,eACxD/D,OAAA;gBAAG8D,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAAC;cAA6C;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/E;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENnE,OAAA;UAAK8D,SAAS,EAAC,yCAAyC;UAAAC,QAAA,EACrDxD,WAAW,gBACVP,OAAA,CAAAE,SAAA;YAAA6D,QAAA,gBACE/D,OAAA;cAAK8D,SAAS,EAAC,sCAAsC;cAAAC,QAAA,eACnD/D,OAAA;gBAAI8D,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,EAAEL,cAAc,CAACnD,WAAW;cAAC;gBAAAyD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpE,CAAC,eACNnE,OAAA;cAAK8D,SAAS,EAAC,0CAA0C;cAAAC,QAAA,EACtDtD,QAAQ,CAAC+D,GAAG,CAAEtB,OAAO,iBACpBlD,OAAA;gBACE8E,GAAG,EAAEzD,SAAU;gBAEfyC,SAAS,EAAE,gCAAgCZ,OAAO,CAACE,MAAM,KAAK9B,WAAW,CAACQ,KAAK,GAAG,KAAK,GAAG,EAAE,EAAG;gBAAAiC,QAAA,eAE/F/D,OAAA;kBAAK8D,SAAS,EAAC,8CAA8C;kBAAAC,QAAA,gBAC3D/D,OAAA;oBAAG8D,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,EAAEb,OAAO,CAACG;kBAAI;oBAAAW,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACnDnE,OAAA;oBAAM8D,SAAS,EAAC,0CAA0C;oBAAAC,QAAA,EACvD,IAAIgB,IAAI,CAAC7B,OAAO,CAAC8B,SAAS,CAAC,CAACC,kBAAkB,CAAC;kBAAC;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7C,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC,GARDjB,OAAO,CAACT,GAAG;gBAAAuB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OASb,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNnE,OAAA;cAAM8D,SAAS,EAAC,8CAA8C;cAACoB,QAAQ,EAAEpC,YAAa;cAAAiB,QAAA,gBACpF/D,OAAA;gBACEmF,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,mBAAmB;gBAC/Bf,KAAK,EAAE1D,UAAW;gBAClB2D,QAAQ,EAAGvB,CAAC,IAAKnC,aAAa,CAACmC,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;gBAC/CP,SAAS,EAAC;cAA+B;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC,eACFnE,OAAA;gBAAQmF,IAAI,EAAC,QAAQ;gBAACrB,SAAS,EAAC,uDAAuD;gBAAAC,QAAA,EAAC;cAExF;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA,eACP,CAAC,gBAEHnE,OAAA;YAAK8D,SAAS,EAAC,2CAA2C;YAAAC,QAAA,gBACxD/D,OAAA;cAAK8D,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtCnE,OAAA;cAAI8D,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAC;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7DnE,OAAA;cAAG8D,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAC;YAA6D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/F;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/D,EAAA,CAvOQD,QAAQ;AAAAkF,EAAA,GAARlF,QAAQ;AAyOjB,eAAeA,QAAQ;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}